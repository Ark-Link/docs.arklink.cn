import{_ as t,o as p,c as o,a as n,d as e,b as s,e as c,r as i}from"../app.2fb2eae3.mjs";const l={},u=n("h1",{id:"\u53C2\u6570\u9A8C\u8BC1\u5668",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u53C2\u6570\u9A8C\u8BC1\u5668","aria-hidden":"true"},"#"),s(" \u53C2\u6570\u9A8C\u8BC1\u5668")],-1),r=n("h3",{id:"validator",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#validator","aria-hidden":"true"},"#"),s(" validator")],-1),k=s("\u7531\u4E8Ego-zero\u7684\u53C2\u6570\u6821\u9A8C\u89C4\u5219\u6BD4\u8F83\u5C11\uFF0C\u6240\u4EE5ark-admin\u4FEE\u6539\u4E86handler\u6A21\u677F\uFF0C\u52A0\u5165\u4E86"),d={href:"https://github.com/go-playground/validator",target:"_blank",rel:"noopener noreferrer"},v=s("go-playground/validator"),m=c(`<p>\u8BE6\u7EC6\u6821\u9A8C\u89C4\u5219\u8BF7\u53C2\u8003\u5B98\u65B9\u6587\u6863\uFF0C\u8FD9\u91CC\u5C31\u4E0D\u518D\u8D58\u8FF0\u4E86</p><h3 id="\u4F7F\u7528\u6821\u9A8C" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u6821\u9A8C" aria-hidden="true">#</a> \u4F7F\u7528\u6821\u9A8C</h3><p>\u4EE5\u66F4\u65B0\u4E2A\u4EBA\u8D44\u6599\u4E3A\u4F8B\uFF0C\u751F\u6210\u7684handler\u5982\u4E0B</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> user

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;errors&quot;</span>
	<span class="token string">&quot;net/http&quot;</span>
	<span class="token string">&quot;reflect&quot;</span>

	<span class="token string">&quot;ark-admin-zero/app/core/cmd/api/internal/logic/user&quot;</span>
	<span class="token string">&quot;ark-admin-zero/app/core/cmd/api/internal/svc&quot;</span>
	<span class="token string">&quot;ark-admin-zero/app/core/cmd/api/internal/types&quot;</span>
	<span class="token string">&quot;ark-admin-zero/common/errorx&quot;</span>
	<span class="token string">&quot;ark-admin-zero/common/response&quot;</span>

	<span class="token string">&quot;github.com/go-playground/locales/zh&quot;</span>
	ut <span class="token string">&quot;github.com/go-playground/universal-translator&quot;</span>
	<span class="token string">&quot;github.com/go-playground/validator/v10&quot;</span>
	translations <span class="token string">&quot;github.com/go-playground/validator/v10/translations/zh&quot;</span>
	<span class="token string">&quot;github.com/zeromicro/go-zero/rest/httpx&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">UpdateUserProfileHandler</span><span class="token punctuation">(</span>svcCtx <span class="token operator">*</span>svc<span class="token punctuation">.</span>ServiceContext<span class="token punctuation">)</span> http<span class="token punctuation">.</span>HandlerFunc <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">var</span> req types<span class="token punctuation">.</span>UpdateProfileReq
		<span class="token keyword">if</span> err <span class="token operator">:=</span> httpx<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> <span class="token operator">&amp;</span>req<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			httpx<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> errorx<span class="token punctuation">.</span><span class="token function">NewHandlerError</span><span class="token punctuation">(</span>errorx<span class="token punctuation">.</span>ParamErrorCode<span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>

		validate <span class="token operator">:=</span> validator<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		validate<span class="token punctuation">.</span><span class="token function">RegisterTagNameFunc</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>fld reflect<span class="token punctuation">.</span>StructField<span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
			name <span class="token operator">:=</span> fld<span class="token punctuation">.</span>Tag<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;label&quot;</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span> name
		<span class="token punctuation">}</span><span class="token punctuation">)</span>

		trans<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> ut<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>zh<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetTranslator</span><span class="token punctuation">(</span><span class="token string">&quot;zh&quot;</span><span class="token punctuation">)</span>
		validateErr <span class="token operator">:=</span> translations<span class="token punctuation">.</span><span class="token function">RegisterDefaultTranslations</span><span class="token punctuation">(</span>validate<span class="token punctuation">,</span> trans<span class="token punctuation">)</span>
		<span class="token keyword">if</span> validateErr <span class="token operator">=</span> validate<span class="token punctuation">.</span><span class="token function">StructCtx</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> req<span class="token punctuation">)</span><span class="token punctuation">;</span> validateErr <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token keyword">range</span> validateErr<span class="token punctuation">.</span><span class="token punctuation">(</span>validator<span class="token punctuation">.</span>ValidationErrors<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				httpx<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> errorx<span class="token punctuation">.</span><span class="token function">NewHandlerError</span><span class="token punctuation">(</span>errorx<span class="token punctuation">.</span>ParamErrorCode<span class="token punctuation">,</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Translate</span><span class="token punctuation">(</span>trans<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
				<span class="token keyword">return</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

		l <span class="token operator">:=</span> user<span class="token punctuation">.</span><span class="token function">NewUpdateUserProfileLogic</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> svcCtx<span class="token punctuation">)</span>
		err <span class="token operator">:=</span> l<span class="token punctuation">.</span><span class="token function">UpdateUserProfile</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>req<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			httpx<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> err<span class="token punctuation">)</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>

		response<span class="token punctuation">.</span><span class="token function">Response</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function b(f,g){const a=i("ExternalLinkIcon");return p(),o("div",null,[u,r,n("p",null,[k,n("a",d,[v,e(a)])]),m])}const q=t(l,[["render",b],["__file","validate.html.vue"]]);export{q as default};
