openapi: 3.0.0
info:
  title: ARK-ADMIN管理系统API文档
  version: 1.0.0
servers:
  -
    url: 'http://127.0.0.1:9501'
    description: ARK-ADMIN管理系统API服务器
paths:
  /admin/account/info:
    get:
      tags:
        - 账户模块
      summary: 获取管理员资料
      description: ''
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data:
                  name: string
                  nickName: string
                  email: string
                  phone: string
                  remark: string
                  headImg: string
  /admin/account/update:
    post:
      tags:
        - 账户模块
      summary: 关系管理员资料
      requestBody:
        request: /admin/account/update
        content:
          application/json:
            schema:
              example:
                code: 200
                message: success
                data:
                  nickName: string
                  email: string
                  phone: string
                  remark: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data: []
  /admin/account/password:
    post:
      tags:
        - 账户模块
      summary: 更改管理员密码
      requestBody:
        request: /admin/account/password
        content:
          application/json:
            schema:
              example:
                originPassword: string
                newPassword: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data: []
  /admin/account/logout:
    post:
      tags:
        - 账户模块
      summary: 管理员登出
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data: []
  /admin/account/permmenu:
    get:
      tags:
        - 账户模块
      summary: 获取获取菜单和权限列表
      description: ''
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data:
                  menus: [{ createdAt: '2021-10-09 09:13:17', updatedAt: '2021-10-09 09:13:17', id: 0, parentId: 0, name: string, router: string, perms: string, type: 0, icon: string, orderNum: 0, viewPath: string, keepalive: true, isShow: true }]
                  perms: [string]
  /admin/sys/dept/list:
    get:
      tags:
        - 部门模块
      summary: 获取系统部门列表
      description: ''
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data:
                  - { createdAt: '2021-10-09 09:24:06', updatedAt: '2021-10-09 09:24:06', id: 0, parentId: 0, name: string, orderNum: 0 }
  /admin/sys/dept/add:
    post:
      tags:
        - 部门模块
      summary: 创建系统部门
      requestBody:
        request: /admin/sys/dept/add
        content:
          application/json:
            schema:
              example:
                name: string
                parentId: 0
                orderNum: 0
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data: []
  /admin/sys/dept/delete:
    post:
      tags:
        - 部门模块
      summary: 删除系统部门
      requestBody:
        request: /admin/sys/dept/delete
        content:
          application/json:
            schema:
              example:
                departmentId: 0
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data: []
  /admin/sys/dept/info:
    get:
      tags:
        - 部门模块
      summary: 查询单个系统部门信息
      operationId: /admin/sys/dept/info
      parameters:
        -
          name: departmentId
          in: query
          description: 部门id
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data:
                  department: { createdAt: '2021-10-09 09:33:59', updatedAt: '2021-10-09 09:33:59', id: 0, parentId: 0, name: string, orderNum: 0 }
                  parentDepartment: { createdAt: '2021-10-09 09:33:59', updatedAt: '2021-10-09 09:33:59', id: 0, parentId: 0, name: string, orderNum: 0 }
  /admin/sys/dept/update:
    post:
      tags:
        - 部门模块
      summary: 更新系统部门
      requestBody:
        request: /admin/sys/dept/update
        content:
          application/json:
            schema:
              example:
                name: string
                parentId: 0
                orderNum: 0
                id: 0
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data: []
  /admin/sys/dept/transfer:
    post:
      tags:
        - 部门模块
      summary: 管理部门转移
      requestBody:
        request: /admin/sys/dept/transfer
        content:
          application/json:
            schema:
              example:
                userId:
                  - 0
                departmentId: 0
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data: []
  /admin/sys/dept/move:
    post:
      tags:
        - 部门模块
      summary: 部门移动排序
      requestBody:
        request: /admin/sys/dept/move
        content:
          application/json:
            schema:
              example:
                depts:
                  - { id: 0, parentId: 0 }
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data: []
  /admin/captcha/img:
    get:
      tags:
        - 登录模块
      summary: 获取登录图片验证码
      description: ''
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data:
                  img: string
                  id: string
  /admin/login:
    post:
      tags:
        - 登录模块
      summary: 管理员登录
      requestBody:
        request: /admin/login
        content:
          application/json:
            schema:
              example:
                username: string
                password: string
                captchaId: string
                verifyCode: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data:
                  token: string
  /admin/sys/log/login/page:
    get:
      tags:
        - 日志模块
      summary: 分页查询登录日志
      operationId: /admin/sys/log/login/page
      parameters:
        -
          name: limit
          in: query
          description: 条数
          schema:
            type: integer
        -
          name: page
          in: query
          description: 页数
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data:
                  list: [{ id: 1, username: arkadmin, ip: 172.18.0.1, ua: 'Mozilla\/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/93.0.4577.82 Safari\/537.36', os: 'Windows 10', browser: 'Chrome 93.0.4577', time: '2021-10-09 05:28:50' }]
                  pagination: { total: 8, size: '10', page: '1' }
  /admin/sys/log/task/page:
    get:
      tags:
        - 日志模块
      summary: 分页查询任务日志
      operationId: /admin/sys/log/task/page
      parameters:
        -
          name: limit
          in: query
          description: 条数
          schema:
            type: integer
        -
          name: page
          in: query
          description: 页数
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data:
                  list: [{ id: 1, taskId: 1, status: 1, detail: null, consumeTime: 4, createdAt: '2021-10-09 10:11:00', name: string }]
                  pagination: { total: 1, size: '10', page: '1' }
  /admin/sys/menu/list:
    get:
      tags:
        - 菜单模块
      summary: 获取对应权限的菜单列表
      operationId: /admin/sys/menu/list
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data:
                  - { createdAt: '2021-10-09 13:16:41', updatedAt: '2021-10-09 13:16:41', id: 0, parentId: 0, name: string, router: string, perms: string, type: 0, icon: string, orderNum: 0, viewPath: string, keepalive: true, isShow: true }
  /admin/sys/menu/add:
    post:
      tags:
        - 菜单模块
      summary: 新增菜单或权限
      requestBody:
        request: /admin/sys/menu/add
        content:
          application/json:
            schema:
              example:
                type: 0
                parentId: 0
                name: string
                orderNum: 0
                router: string
                isShow: true
                keepalive: true
                icon: string
                perms: string
                viewPath: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data: []
  /admin/sys/menu/update:
    post:
      tags:
        - 菜单模块
      summary: 更新菜单或权限
      requestBody:
        request: /admin/sys/menu/update
        content:
          application/json:
            schema:
              example:
                type: 0
                parentId: 0
                name: string
                orderNum: 0
                router: string
                isShow: true
                keepalive: true
                icon: string
                perms: string
                viewPath: string
                menuId: 0
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data: []
  /admin/sys/menu/delete:
    post:
      tags:
        - 菜单模块
      summary: 删除菜单或权限
      requestBody:
        request: /admin/sys/menu/delete
        content:
          application/json:
            schema:
              example:
                menuId: 0
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data: []
  /admin/sys/menu/info:
    get:
      tags:
        - 菜单模块
      summary: 获取菜单或权限信息
      operationId: /admin/sys/menu/info
      parameters:
        -
          name: menuId
          in: query
          description: 菜单id
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data:
                  - { menu: { createdAt: '2021-10-09 13:28:46', updatedAt: '2021-10-09 13:28:46', id: 0, parentId: 0, name: string, router: string, perms: string, type: 0, icon: string, orderNum: 0, viewPath: string, keepalive: true, isShow: true }, parentMenu: { createdAt: '2021-10-09 13:28:46', updatedAt: '2021-10-09 13:28:46', id: 0, parentId: 0, name: string, router: string, perms: string, type: 0, icon: string, orderNum: 0, viewPath: string, keepalive: true, isShow: true } }
  /admin/sys/online/list:
    get:
      tags:
        - 在线用户模块模块
      summary: 查询当前在线用户
      operationId: /admin/sys/online/listt
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data:
                  - [{ id: 0, ip: string, username: string, isCurrent: true, time: string, os: string, browser: string, disable: true }]
  /admin/sys/online/kick:
    post:
      tags:
        - 在线用户模块模块
      summary: 下线指定在线用户
      requestBody:
        request: /admin/sys/online/kick
        content:
          application/json:
            schema:
              example:
                id: 0
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data: []
  /admin/sys/role/list:
    get:
      tags:
        - 角色模块
      summary: 获取角色列表
      operationId: /admin/sys/role/list
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data:
                  - { createdAt: '2021-10-09 13:43:56', updatedAt: '2021-10-09 13:43:56', id: 0, userId: string, name: string, label: string, remark: string }
  /admin/sys/role/page:
    get:
      tags:
        - 角色模块
      summary: 分页查询角色信息
      operationId: /admin/sys/role/page
      parameters:
        -
          name: limit
          in: query
          description: 条数
          schema:
            type: integer
        -
          name: page
          in: query
          description: 页数
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data:
                  - { createdAt: '2021-10-09 13:46:35', updatedAt: '2021-10-09 13:46:35', id: 0, userId: string, name: string, label: string, remark: string }
  /admin/sys/role/delete:
    post:
      tags:
        - 角色模块
      summary: 删除角色
      requestBody:
        request: /admin/sys/role/delete
        content:
          application/json:
            schema:
              example:
                roleIds:
                  - 0
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data: []
  /admin/sys/role/add:
    post:
      tags:
        - 角色模块
      summary: 新增角色
      requestBody:
        request: /admin/sys/role/add
        content:
          application/json:
            schema:
              example:
                name: string
                label: string
                remark: string
                menus:
                  - string
                depts:
                  - string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data: []
  /admin/sys/role/update:
    post:
      tags:
        - 角色模块
      summary: 更新角色
      requestBody:
        request: /admin/sys/role/update
        content:
          application/json:
            schema:
              example:
                name: string
                label: string
                remark: string
                menus:
                  - string
                depts:
                  - string
                roleId: 0
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data: []
  /admin/sys/role/info:
    get:
      tags:
        - 角色模块
      summary: 获取角色信息
      operationId: /admin/sys/role/info
      parameters:
        -
          name: roleId
          in: query
          description: 角色id
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                roleInfo:
                  createdAt: '2021-10-09 14:54:52'
                  updatedAt: '2021-10-09 14:54:52'
                  id: 0
                  userId: string
                  name: string
                  label: string
                  remark: string
                menus:
                  - { createdAt: '2021-10-09 14:54:52', updatedAt: '2021-10-09 14:54:52', id: 0, roleId: 0, menuId: 0 }
                depts:
                  - { createdAt: '2021-10-09 14:54:52', updatedAt: '2021-10-09 14:54:52', id: 0, roleId: 0, departmentId: 0 }
  /admin/sys/task/page:
    get:
      tags:
        - 任务调度模块
      summary: 获取任务列表
      operationId: /admin/sys/task/page
      parameters:
        -
          name: limit
          in: query
          description: 条数
          schema:
            type: integer
        -
          name: page
          in: query
          description: 页数
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data:
                  list: [{ id: 1, execute: App\\Crontab\\DemoTask, type: callback, title: CronCenterTest, remark: '', rule: '*\/5 * * * * *', nodeId: 1, status: 0, isDelete: 0, params: '[]', singleton: 1, onOneServer: 1, startAt: '2021-10-08 00:26:42', lastAt: '2022-10-08 07:05:59', nodeName: '172.17.0.7:9501' }]
                  pagination: { total: 1, size: '10', page: '1' }
  /admin/sys/task/add:
    post:
      tags:
        - 任务调度模块
      summary: 添加任务
      requestBody:
        request: /admin/sys/task/add
        content:
          application/json:
            schema:
              example:
                title: string
                execute: App\\Crontab\\TestTask
                params: '[]'
                rule: '* * * * *'
                startAt: '2021-10-09 23:47:08'
                lastAt: '2021-10-30 00:00:00'
                singleton: true
                onOneServer: true
                remark: ''
                status: 0
                nodeId: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data: []
  /admin/sys/task/update:
    post:
      tags:
        - 任务调度模块
      summary: 更新任务
      requestBody:
        request: /admin/sys/task/update
        content:
          application/json:
            schema:
              example:
                title: string
                execute: App\\Crontab\\TestTask
                params: '[]'
                rule: '* * * * *'
                startAt: '2021-10-09 23:47:08'
                lastAt: '2021-10-30 00:00:00'
                singleton: true
                onOneServer: true
                remark: ''
                status: 0
                nodeId: 1
                id: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data: []
  /admin/sys/task/info:
    get:
      tags:
        - 任务调度模块
      summary: 查询任务详细信息
      operationId: /admin/sys/task/info
      parameters:
        -
          name: id
          in: query
          description: 任务id
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data:
                  id: 2
                  name: string
                  title: string
                  type: callback
                  rule: '* * * * *'
                  nodeId: 1
                  status: 0
                  isDeleted: 0
                  execute: App\\Crontab\\TestTask
                  params: '[]'
                  singleton: true
                  onOneServer: true
                  remark: ''
                  startAt: '2021-10-09 23:47:08'
                  lastAt: '2021-10-30 00:00:00'
                  createdAt: '2021-10-09 15:47:42'
                  updatedAt: '2021-10-09 23:50:00'
  /admin/sys/task/once:
    post:
      tags:
        - 任务调度模块
      summary: 手动执行任务
      requestBody:
        request: /admin/sys/task/once
        content:
          application/json:
            schema:
              example:
                id: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data: []
  /admin/sys/task/stop:
    post:
      tags:
        - 任务调度模块
      summary: 停止任务
      requestBody:
        request: /admin/sys/task/stop
        content:
          application/json:
            schema:
              example:
                id: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data: []
  /admin/sys/task/start:
    post:
      tags:
        - 任务调度模块
      summary: 启动任务
      requestBody:
        request: /admin/sys/task/start
        content:
          application/json:
            schema:
              example:
                id: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data: []
  /admin/sys/task/delete:
    post:
      tags:
        - 任务调度模块
      summary: 删除任务
      requestBody:
        request: /admin/sys/task/delete
        content:
          application/json:
            schema:
              example:
                id: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data: []
  /admin/sys/user/add:
    post:
      tags:
        - 管理员模块
      summary: 新增管理员
      requestBody:
        request: /admin/sys/user/add
        content:
          application/json:
            schema:
              example:
                departmentId: 0
                name: string
                username: string
                roles:
                  - 0
                nickName: string
                email: string
                phone: string
                remark: string
                status: 0
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data: []
  /admin/sys/user/info:
    get:
      tags:
        - 管理员模块
      summary: 获取任务列表
      operationId: /admin/sys/user/info
      parameters:
        -
          name: userId
          in: query
          description: 用户id
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data:
                  id: 2
                  departmentId: 2
                  name: string
                  nickName: string
                  username: string
                  email: string
                  phone: string
                  remark: string
                  status: 1
                  departmentName: string
                  roles: [2]
  /admin/sys/user/delete:
    post:
      tags:
        - 管理员模块
      summary: 删除管理员
      requestBody:
        request: /admin/sys/user/delete
        content:
          application/json:
            schema:
              example:
                userIds:
                  - 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data: []
  /admin/sys/user/page:
    post:
      tags:
        - 管理员模块
      summary: 分页获取管理员列表
      requestBody:
        request: /admin/sys/user/page
        content:
          application/json:
            schema:
              example:
                page: 1
                limit: 10
                departmentIds:
                  - 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data:
                  list: [{ id: 2, headImg: null, roleIds: '[2]', departmentId: 2, name: string, nickName: string, username: string, email: string, phone: string, remark: string, status: 1, createdAt: '2021-09-17 13:02:43', updatedAt: '2021-09-17 13:02:43', departmentName: string, roleNames: [string] }]
                  pagination: { total: 1, size: 10, page: 1 }
  /admin/sys/user/update:
    post:
      tags:
        - 管理员模块
      summary: 更新管理员
      requestBody:
        request: /admin/sys/user/update
        content:
          application/json:
            schema:
              example:
                departmentId: 0
                name: string
                username: string
                roles:
                  - 0
                nickName: string
                email: string
                phone: string
                remark: string
                status: 0
                id: 0
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data: []
  /admin/sys/user/password:
    post:
      tags:
        - 管理员模块
      summary: 更新指定管理员密码
      requestBody:
        request: /admin/sys/user/password
        content:
          application/json:
            schema:
              example:
                userId: 0
                password: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: {  }
              example:
                code: 200
                message: success
                data: []
components:
  securitySchemes:
    token:
      type: apiKey
      description: 登录凭证
      name: Authorization
      in: header
security:
  -
    token: []
tags:
  -
    name: 账户模块
    description: 账户相关
  -
    name: 部门模块
    description: 部门相关
  -
    name: 登录模块
    description: 登录相关
  -
    name: 日志模块
    description: 日志相关
  -
    name: 菜单模块
    description: 菜单相关
  -
    name: 在线用户模块模块
    description: 在线用户相关
  -
    name: 角色模块
    description: 角色相关
  -
    name: 任务调度模块
    description: 任务调度相关
  -
    name: 管理员模块
    description: 管理员相关
